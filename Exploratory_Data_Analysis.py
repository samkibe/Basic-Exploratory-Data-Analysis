# -*- coding: utf-8 -*-
"""Exploratory Data Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eQe4zzbXrjcJRdHqvpVFagq0E-tY4NH2
"""

print ("This is Group 2's Assignment 1 ~ Exploratory Data Analysis ")

# mount the drive
from google.colab import drive
drive.mount('/content/drive')

from tensorflow.python.client import device_lib
def get_available_devices():
    local_device_protos = device_lib.list_local_devices()
    return [x.name for x in local_device_protos]

print(get_available_devices())

#configure the directory path
import os.path
import os

os.chdir('/content/drive/My Drive/Colab Notebooks')
#investigate the current working directory
print("Current Working Directory " , os.getcwd())

import pandas as pd
df = pd.read_csv("customer_data.csv", thousands=',')
df.head()

print(df.columns)

# Check for missing values
print("Missing values before cleaning:")
print(df.isnull().sum())

df.info()

# Summary statistics
print("\nSummary statistics:")
print(df.describe())

# Summary statistics for categorical columns
print("\nCategorical columns summary:")
print(df.describe(include=['object']))

df.nunique()

import matplotlib.pyplot as plt
import seaborn as sns

# Visualizations
# Example 1: Distribution of Purchase Quantity
plt.figure(figsize=(10, 6))
sns.histplot(df['purchase_amount'], bins=30, kde=True, color='skyblue')
plt.title('Distribution of Purchase Quantity')
plt.xlabel('Quantity')
plt.ylabel('Count')
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# Visualization 1: Age distribution
plt.figure(figsize=(10, 6))
sns.histplot(df['age'], bins=30, kde=True, color='skyblue')
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Count')
plt.grid(True)
plt.show()

# Visualization 2: Income distribution by gender
plt.figure(figsize=(10, 6))
sns.boxplot(x='gender', y='income', data=df, palette='Set2')
plt.title('Income Distribution by Gender')
plt.xlabel('Gender')
plt.ylabel('Income')
plt.grid(True)
plt.show()

# Visualization 3: Purchase frequency by region
plt.figure(figsize=(10, 6))
sns.barplot(x='region', y='purchase_frequency', data=df, palette='Set3')
plt.title('Purchase Frequency by Region')
plt.xlabel('Region')
plt.ylabel('Purchase Frequency')
plt.grid(True)
plt.show()

# Visualization 4: Loyalty status distribution
plt.figure(figsize=(10, 6))
sns.countplot(x='loyalty_status', data=df, palette='Set1')
plt.title('Loyalty Status Distribution')
plt.xlabel('Loyalty Status')
plt.ylabel('Count')
plt.grid(True)
plt.show()

# Visualization 5: Satisfaction score distribution by promotion usage
plt.figure(figsize=(10, 6))
sns.boxplot(x='promotion_usage', y='satisfaction_score', data=df, palette='Set2')
plt.title('Satisfaction Score Distribution by Promotion Usage')
plt.xlabel('Promotion Usage')
plt.ylabel('Satisfaction Score')
plt.grid(True)
plt.show()

# Visualization 6: Purchase amount by product category
plt.figure(figsize=(10, 6))
sns.barplot(x='product_category', y='purchase_amount', data=df, palette='Set3')
plt.title('Purchase Amount by Product Category')
plt.xlabel('Product Category')
plt.ylabel('Purchase Amount')
plt.xticks(rotation=45)
plt.grid(True)
plt.show()